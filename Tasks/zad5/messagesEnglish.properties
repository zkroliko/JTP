#Contains the messages to be written
#For showing String immutability
stringMessage=I will present immutability of the class String
string1=Black
string2=Mouse
string1Announce=First variable of the type String is: 
string2Announce=Second variable of the type String is: 
stringsJoinMessage=Now i will join those two strings into one into first string, and also define additional string referencing to the first one. 
stringResult1Announce=The stringResult of joining two Strings, using object of class Joiner, saved in first variable: 
stringResult2Announce=The original value pointed on by the a variable: 
stringResultMessagePart1=It's clear that these variables point to different data, but actually shouldn't.
stringResultMessagePart2=The resaon is immutablility of string variable.\nChange of the variable doesn't change the data, instead creating new data, under that variable.
#For showing BigInteger immutability
BigIntegerMessage=I will present immutability of the class BigInteger
BigInteger1=314159265312312312312312312312312342351235241234
BigInteger2=374159265358797123131231231231231231231231123
BigInteger1Announce=First variable of the type BigInteger is:  
BigInteger2Announce=Second variable of the type BigInteger is:  
BigIntegersAddMessage=Now i will divife those two variables and save result into first one, and also define additional BigInteger referencing to the first one. 
BigIntegerResult1Announce=The result of dividing two integers, saved in first variable: 
BigIntegerResult2Announce=The original value pointed on by the a variable:
BigIntegerResultMessagePart1=It's clear that these variables point to different data, but actually shouldn't.
BigIntegerResultMessagePart2=The resason is immutablility of BigInteger variable.\nChange of the variable doesn't change the data, instead creating new data, under that variable.